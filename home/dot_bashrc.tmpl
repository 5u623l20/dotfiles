#!/usr/bin/env bash

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

source {{ .chezmoi.homeDir -}}/.config/env

# { env
export BASHDOTDIR=$XDG_CONFIG_HOME/bash
export LSCOLORS='Gxfxcxdxdxegedabagacad'
source $XDG_CONFIG_HOME/shells/functions
# Alias definitions.
source $XDG_CONFIG_HOME/shells/alias
source $BASHDOTDIR/libs/base.sh
# Check if UID is not zero and sudo exists.
if ( check_cmd sudo ) && [ $UID -ne 0 ] && ( sudo -vn 2>&1 | grep 'password' > /dev/null ); then
    export SUDO='sudo '
else
    export SUDO=''
fi
if ( check_cmd fzf ); then
    export FZF_COMPLETION_TRIGGER=''
fi
# User configuration
# Don't record some commands
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history:clear"
if [ -z "$HISTFILE" ]; then
  HISTFILE=$HOME/.bash_history
fi
# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
# Avoid duplicate entries
HISTCONTROL="erasedups:ignoreboth"
# Huge history. Doesn't appear to slow things down, so why not?
HISTSIZE=500000
HISTFILESIZE=100000
# Use standard ISO 8601 timestamp
# %F equivalent to %Y-%m-%d
# %T equivalent to %H:%M:%S (24-hours format)
HISTTIMEFORMAT='%F %T '
HIST_STAMPS="yyyy-mm-dd"
# Automatically trim long paths in the prompt (requires Bash 4.x)
PROMPT_DIRTRIM=2
# This defines where cd looks for targets
# Add the directories you want to have fast access to, separated by colon
# Ex: CDPATH=".:~:~/projects" will look for targets in the current working directory, in home and in the ~/projec
CDPATH="."
# Record each line as it gets issued
PROMPT_COMMAND='history -a'
# env }

# Add some sane options
# Prevent file overwrite on stdout redirection
# Use `>|` to force redirection to an existing file
set -o noclobber
# Update window size after every command
shopt -s checkwinsize
# Turn on recursive globbing (enables ** to recurse all directories)
shopt -s globstar 2> /dev/null
# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob;
# Prepend cd to directory names automatically
shopt -s autocd 2> /dev/null
# Correct spelling errors during tab-completion
shopt -s dirspell 2> /dev/null
# Correct spelling errors in arguments supplied to cd
shopt -s cdspell 2> /dev/null
# This allows you to bookmark your favorite places across the file system
# Define a variable containing a path and you will be able to cd into it regardless of the directory you're in
shopt -s cdable_vars
# Append to the history file, don't overwrite it
shopt -s histappend
# Save multi-line commands as one command
shopt -s cmdhist
# use readline on history
shopt -s histreedit
# load history line onto readline buffer for editing
shopt -s histverify
# save history with newlines instead of ; where possible
shopt -s lithist
# recognize comments
shopt -s interactive_comments

# Add keybindings
# Enable history expansion with space
# E.g. typing !!<space> will replace the !! with your last command
bind Space:magic-space
# Perform file completion in a case insensitive fashion
bind "set completion-ignore-case on"
# Treat hyphens and underscores as equivalent
bind "set completion-map-case on"
# Display matches for ambiguous patterns at first tab press
bind "set show-all-if-ambiguous on"
# Immediately add a trailing slash when autocompleting symlinks to directories
bind "set mark-symlinked-directories on"
# Enable incremental history search with up/down arrows (also Readline goodness)
bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\e[C": forward-char'
bind '"\e[D": backward-char'

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
# We have color support; assume it's compliant with Ecma-48
# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
# a case would tend to support setf rather than setaf.)
true
else
true
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

export OSH=$XDG_CONFIG_HOME/bash

THEME="random"

# Load colors first so they can be use in base theme
source "${BASHDOTDIR}/plugins/colours.prompt.sh"
source "${BASHDOTDIR}/plugins/base.prompt.sh"

# Load the theme
if [ "$THEME" = "random" ]; then
  themes=($BASHDOTDIR/themes/*theme.sh)
  N=${#themes[@]}
  ((N=(RANDOM%N)))
  RANDOM_THEME=${themes[$N]}
  source "$RANDOM_THEME"
  echo "Random theme '$RANDOM_THEME' loaded..."
else
  if [ ! "$THEME" = ""  ]; then
    source "$BASHDOTDIR/themes/$THEME.theme.sh"
  fi
fi

if [[ $PROMPT ]]; then
    export PS1="\["$PROMPT"\]"
fi
# vi: ft=sh
